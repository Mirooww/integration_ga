name: GitHub Actions Demo
on: [push]

env:
    ENV_TARGET: ${{ github.ref == 'refs/heads/canary' && 'canary' || '' }}

jobs:
    install:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "latest"

            - name: Cache Node modules
              uses: actions/cache@v4
              id: cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node_modules-

            - name: Install dependencies
              if: steps.cache-node-modules.outputs.cache-hit != 'true'
              run: npm ci

            - uses: actions/upload-artifact@v4
              with:
                  name: node_modules
                  path: node_modules/

    validate:
        needs: install
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, 'chore: release') && !startsWith(github.ref, 'refs/tags/')"
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: node_modules
                  path: node_modules/

            - name: Run linting
              run: npm run lint

            - name: Run unit tests
              run: npm test

            - name: Canary validation
              if: env.ENV_TARGET == 'canary'
              run: echo "Hello Only Canary!"

    integration-test:
        needs: validate
        runs-on: ubuntu-latest
        if: "env.ENV_TARGET == 'canary' && !contains(github.event.head_commit.message, 'chore: release') && !startsWith(github.ref, 'refs/tags/')"
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: node_modules
                  path: node_modules/

            - name: Run integration tests
              run: echo "Hello Integration!"

    e2e-test:
        needs: integration-test
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: node_modules
                  path: node_modules/

            - name: Run E2E tests
              run: echo "Hello E2E!"

    release:
        needs: [validate, integration-test]
        runs-on: ubuntu-latest
        if: "github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore: release') && !startsWith(github.ref, 'refs/tags/')"
        environment: production
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - uses: actions/download-artifact@v4
              with:
                  name: node_modules
                  path: node_modules/

            - name: Configure Git
              run: |
                  git config user.name "${GITHUB_ACTOR}"
                  git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

            - name: Release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: npx --yes release-it --ci
